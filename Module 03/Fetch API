Module 3 - Fetch API

3.1 Intro to Fetch API

Built-in browser, allows users to make network requests.

Improvement over XMLHttpRequest

fetch(url)
will return a promise that will hold a fetch response

3.2 Basic Fetch Usage

3.2.1

Making a simple network request 

fetch("https://jsonplaceholder.typicode.com/todos/1")
    .then(function(result) {
        return result.json()
    })
    .then(function(result) {
        console.log(result);
    })
    .catch(function(err) {
        console.log(err);
    })

Extracting data from a response object

json() used to extract a json object
text() used to extract a text string
blob() used to extract a file-like object

3.2.2 Handling Fetch Responses

Checking the response status

fetch("https://jsonplaceholder.typicode.com/bad_url/1")
    .then(function(result) {
        console.log(result);
        if(result.ok) {
            return result.text();
        } else {
            console.log(result.status);
            return Promise.reject(result.status);
        }
    })
    .then(function(result) {
        console.log(result);
    })
    .catch(function(err) {
        console.log("Error: " + err);
    })

3.3 Customizing Fetch Settings

Text

Key 1:78f0ba6c0b9f47e384d2cb09eacc83fd Regenerate | Hide | Copy
Key 2:cd66362bf5934de9a430783ac4ca7567 Regenerate | Hide | Copy

Face

Key 1:c4f54e18f5564e48ae10190e39f9e91d Regenerate | Hide | Copy
Key 2:436e493f7e0a4c17ab1f832502988012 